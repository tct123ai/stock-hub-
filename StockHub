

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Skywars StockV2",
   Icon = 94614569154675, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by CatCat",
   Theme = "Bloom", -- Check https://docs.sirius.menu/rayfield/configuration/themes



   DisableRayfieldPrompts = true,
   DisableBuildWarnings = true, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = StockV2, -- Create a custom folder for your hub/game
      FileName = "save data for skywars script"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "xjbUsrrE", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "stock key system",
      Subtitle = "Key System",
      Note = "join the discord server to get the key", -- Use this to tell the user how to get a key
      FileName = "skyKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"stock"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})


local Tab = Window:CreateTab("auto farms", 0) -- Title, Image

local Section = Tab:CreateSection("auto farms")

local Toggle = Tab:CreateToggle({
   Name = "coin auto farm",
   CurrentValue = false,
   Flag = "diddy", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
       if Value then

           local part = Instance.new("Part")

part.BrickColor = BrickColor.new("Medium Stone Grey")

part.Name = ("Coin")

part.Parent = game.workspace.GameStorage.Coins

part.Anchored = true

part.CFrame = game.workspace.GroupDoor.CFrame

part.CanCollide = false

part.Transparency = 1






           while Value do
    wait(0.05)


game.workspace.GameStorage.Coins.Coin.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame


print("working")
       end
       
           elseif not Value then
               Value = false
               print("off")
               game.workspace.GameStorage.Coins.Coin:Remove()
           end


   end,
})

local Button = Tab:CreateButton({
   Name = "ore auto farm(NOT WORKING)",
   Interact = 'Click',
   Callback = function()
       local cpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

local stuff = workspace:getDescendants()
for i=1,#stuff do
if stuff[i].Name == "Block" and stuff[i].Parent.Name == "Ores" then
    wait(1)
repeat
wait(1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = stuff[i].CFrame
game.Players.LocalPlayer.Character.Axe.RemoteEvent:FireServer(stuff[i])
wait(0.5)
until stuff[i].Name ~= "Block" or not game.Players.LocalPlayer.Character:findFirstChild("Axe")
end
end

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cpos
   end,
})

Rayfield:Notify({
   Title = "thinks for using stock scripts!",
   Content = "Notification Content",
   Duration = 6.5,
   Image = 86186662296027,
})


local Tab = Window:CreateTab("player", 0) -- Title, Image

local Section = Tab:CreateSection("player")

local Slider = Tab:CreateSlider({
   Name = "hitboxes",
   Range = {2, 20},
   Increment = 1,
   Suffix = "hitbox size",
   CurrentValue = 2,
   Flag = "hitbox_slider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   local HeadSize = Value
local IsDisabled = true

if IsDisabled then
        local localPlayer = game:GetService('Players').LocalPlayer
        if not localPlayer then return end
        
        local localPlayerTeam = localPlayer.Team
        
        for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
            if player ~= localPlayer and (not IsTeamCheckEnabled or player.Team ~= localPlayerTeam) then
                local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.Size = Vector3.new(HeadSize, HeadSize, HeadSize)
                    humanoidRootPart.Transparency = 0.7
                    humanoidRootPart.BrickColor = BrickColor.new("Really blue")
                    humanoidRootPart.Material = Enum.Material.Neon
                    humanoidRootPart.CanCollide = false
                end
            end
        end
    end

   end,
})


local Button = Tab:CreateButton({
   Name = "INF Jump",
   Callback = function()
   plr = game.Players.LocalPlayer
	mouse = plr:GetMouse()
	mouse.KeyDown:connect(function(key)
		
		if key == " " then
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(3)
			wait()
		end
	end)
   end,
})



local Toggle = Tab:CreateToggle({
   Name = "walk speed bypass",
   CurrentValue = false,
   Flag = "walksdsd", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  if Value then


--[[ Varaibles ]]--
local uis=game:GetService("UserInputService");

sigma = false
holdingW = true

holdingS = true

holdingA = true

holdingD = true

--[[ Main ]]--

-- pressing
uis.InputBegan:connect(function(input)
    if input.KeyCode==Enum.KeyCode.W then
        print("walk speed bypass");
        holdingW = true
        while holdingW do
            wait(0.05)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 1.5
    end
    end
end)

-- left 
uis.InputEnded:connect(function(input)
    if input.KeyCode==Enum.KeyCode.W then
        print("you have stopped bypassing");
        holdingW = false
    end
end)

uis.InputBegan:connect(function(input)
    if input.KeyCode==Enum.KeyCode.S then
        print("walk speed bypass");
        holdingS = true
        while holdingS do
            wait(0.05)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 1.5
    end
    end
end)

-- left 
uis.InputEnded:connect(function(input)
    if input.KeyCode==Enum.KeyCode.S then
        print("you have stopped bypassing");
        holdingS = false
    end
end)

uis.InputBegan:connect(function(input)
    if input.KeyCode==Enum.KeyCode.A then
        print("walk speed bypass");
        holdingA = true
        while holdingA do
            wait(0.05)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 0.5
    end
    end
end)

-- left 
uis.InputEnded:connect(function(input)
    if input.KeyCode==Enum.KeyCode.A then
        print("you have stopped bypassing");
        holdingA = false
    end
end)


uis.InputBegan:connect(function(input)
    if input.KeyCode==Enum.KeyCode.D then
        print("walk speed bypass");
        holdingD = true
        while holdingD do
            wait(0.05)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 0.5
    end
    end
end)

-- left 
uis.InputEnded:connect(function(input)
    if input.KeyCode==Enum.KeyCode.D then
        print("you have stopped bypassing");
        holdingD = false
    end
end)


elseif not Value then

sigma = true 

while sigma do
wait()

holdingW = false

holdingS = false

holdingA = false

holdingD = false

end
end
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "scaffold",
   CurrentValue = false,
   Flag = "scafffeld", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
     if Value then
cat = true

        while cat do
    wait(0.1)


local part = Instance.new("Part")

part.BrickColor = BrickColor.new("Medium Stone Grey")

part.CFrame = game.Players.LocalPlayer.Character["Right Leg"].CFrame

part.Parent = game.workspace

part.Anchored = true

part.Size = Vector3.new(2, 1, 1)

wait(0.11)
game.workspace.Part:remove()
end

    elseif not Value then
        cat = false
    end
   end,
})

local Button = Tab:CreateButton({
   Name = "esp",
   Callback = function()
   local hgh = Instance.new("Highlight")
for i, v in game.Players:GetPlayers() do
    for ii, vv in v.Character:GetChildren() do
        if vv:IsA("BasePart") then
            local clon = hgh:Clone()
            clon.Parent = vv
        end
    end
end
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "anti void",
   CurrentValue = false,
   Flag = "cat1121", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
if Value then

   local part = Instance.new("Part")
part.BrickColor = BrickColor.new("Medium Stone Grey")

part.CFrame = CFrame.new(0, 75, 0)

part.Parent = game.workspace

part.Anchored = true

part.Size = Vector3.new(1000, 1, 1000)

part.Name = ("anti_void")

    elseif not Value then


game.workspace.anti_void:remove()

    end
   end,
})

local Slider = Tab:CreateSlider({
   Name = "xray",
   Range = {0, 1},
   Increment = 0.1,
   Suffix = "transparnt",
   CurrentValue = 0,
   Flag = "xray", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)

 local function makeAllPartsTransparent()
  
    for _, object in pairs(workspace:GetDescendants()) do
      
        if object:IsA("Part") and object.Name == "Block" then
            
            object.Transparency = Value
        end
    end
end

makeAllPartsTransparent()
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Flag = "Toggledsds", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   if Value then
          --I do not own this script
char = game.Players.LocalPlayer.Character
local noclip = true
while true do
if noclip == true then
for _,v in pairs(char:children()) do
pcall(function()
if v.className == "Part" then
v.CanCollide = false
end
end)
end
end
game:service("RunService").Stepped:wait()
end

    elseif not Value then

char = game.Players.LocalPlayer.Character
local noclip = true
while true do
if noclip == true then
for _,v in pairs(char:children()) do
pcall(function()
if v.className == "Part" then
v.CanCollide = true
end
end)
end
end
game:service("RunService").Stepped:wait()
end
    end
   end,
})

local Tab = Window:CreateTab("Extra", 0) -- Title, Image

local Section = Tab:CreateSection("Extra")

local Button = Tab:CreateButton({
   Name = "ctrl + click to tp",
   Callback = function()
  local Plr = game:GetService("Players").LocalPlayer

local Mouse = Plr:GetMouse()

 

Mouse.Button1Down:connect(function()

if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then return end

if not Mouse.Target then return end

Plr.Character:MoveTo(Mouse.Hit.p)

end) -- The function that takes place when the button is pressed
   end,
})

local Button = Tab:CreateButton({
   Name = "remove all invis borders",
   Callback = function()
   game.workspace.Borders.InvisibleBorder:remove()
   end,
})

local Button = Tab:CreateButton({
   Name = "remove all kill borders",
   Callback = function()
  game.workspace.Lobby.KillPlates:remove()
   end,
})

local Button = Tab:CreateButton({
   Name = "remove group door",
   Callback = function()
   game.workspace.GroupDoor:remove()
   end,
})

local Tab = Window:CreateTab("kill aura", 0) -- Title, Image

local Section = Tab:CreateSection("aura")


local Toggle = Tab:CreateToggle({
   Name = "kill (aura cant turn off)",
   CurrentValue = false,
   Flag = "cat69", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   if Value then

local active = true
local trueActive = true
local reachType = "Sphere"
local dmgEnabled = true
local visualizerEnabled = false

local visualizer = Instance.new("Part")
visualizer.BrickColor = BrickColor.Blue()
visualizer.Transparency = 0.6
visualizer.Anchored = true
visualizer.CanCollide = false
visualizer.Size = Vector3.new(0.5,0.5,0.5)
visualizer.BottomSurface = Enum.SurfaceType.Smooth
visualizer.TopSurface = Enum.SurfaceType.Smooth

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local TextBox = Instance.new("TextBox")
local TextLabel_2 = Instance.new("TextLabel")
local TextLabel_3 = Instance.new("TextLabel")
local TextLabel_4 = Instance.new("TextLabel")
local TextButton = Instance.new("TextButton")
local Frame_2 = Instance.new("Frame")
local Frame_3 = Instance.new("Frame")
local Frame_4 = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local TextButton_2 = Instance.new("TextButton")

--Properties:

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.DisplayOrder = 999999999
ScreenGui.ResetOnSpawn = false

Frame.Parent = sigma
Frame.AnchorPoint = Vector2.new(0, 0.5)
Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Frame.BackgroundTransparency = 0.300
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 4
Frame.Position = UDim2.new(0, 0, 0.600000024, 0)
Frame.Size = UDim2.new(0.150000006, 0, 0.300000012, 0)


TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Size = UDim2.new(0.600000024, 0, 0.200000003, 0)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Reach:"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

TextBox.Parent = Frame
TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBox.BackgroundTransparency = 1.000
TextBox.Position = UDim2.new(0.600000024, 0, 0, 0)
TextBox.Size = UDim2.new(0.400000006, 0, 0.200000003, 0)
TextBox.Font = Enum.Font.SourceSans
TextBox.Text = "15"
TextBox.TextColor3 = Color3.fromRGB(255, 76, 76)
TextBox.TextScaled = true
TextBox.TextSize = 14.000
TextBox.TextWrapped = true

TextLabel_2.Parent = Frame
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.Position = UDim2.new(0, 0, 0.200000003, 0)
TextLabel_2.Size = UDim2.new(0.600000024, 0, 0.200000003, 0)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = "Shape:"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14.000
TextLabel_2.TextWrapped = true

TextLabel_3.Parent = Frame
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.Position = UDim2.new(0, 0, 0.400000006, 0)
TextLabel_3.Size = UDim2.new(0.600000024, 0, 0.200000003, 0)
TextLabel_3.Font = Enum.Font.SourceSans
TextLabel_3.Text = "Damage:"
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 14.000
TextLabel_3.TextWrapped = true

TextLabel_4.Parent = Frame
TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.Position = UDim2.new(0, 0, 0.600000024, 0)
TextLabel_4.Size = UDim2.new(0.600000024, 0, 0.200000003, 0)
TextLabel_4.Font = Enum.Font.SourceSans
TextLabel_4.Text = "Visualizer:"
TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.TextScaled = true
TextLabel_4.TextSize = 14.000
TextLabel_4.TextWrapped = true

TextButton.Parent = Frame
TextButton.AnchorPoint = Vector2.new(0, 1)
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.Position = UDim2.new(0, 0, 1, 0)
TextButton.Size = UDim2.new(1, 0, 0.150000006, 0)
TextButton.Font = Enum.Font.SourceSansBold
TextButton.Text = "Kill Script"
TextButton.TextColor3 = Color3.fromRGB(222, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

Frame_2.Parent = Frame
Frame_2.Active = false
Frame_2.AnchorPoint = Vector2.new(0, 0.5)
Frame_2.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.725000024, 0, 0.699999988, 0)
Frame_2.Size = UDim2.new(0, 25, 0, 25)
Frame_2.ZIndex = 5

Frame_3.Parent = Frame_2
Frame_3.AnchorPoint = Vector2.new(0.5, 0.5)
Frame_3.BackgroundColor3 = Color3.fromRGB(255, 76, 76)
Frame_3.BorderSizePixel = 0
Frame_3.LayoutOrder = 1
Frame_3.Position = UDim2.new(0.5, 0, 0.5, 0)

Frame_4.Parent = Frame
Frame_4.Active = false
Frame_4.AnchorPoint = Vector2.new(0, 0.5)
Frame_4.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
Frame_4.BorderSizePixel = 0
Frame_4.Position = UDim2.new(0.725000024, 0, 0.5, 0)
Frame_4.Size = UDim2.new(0, 25, 0, 25)
Frame_4.ZIndex = 5

Frame_5.Parent = Frame_4
Frame_5.AnchorPoint = Vector2.new(0.5, 0.5)
Frame_5.BackgroundColor3 = Color3.fromRGB(255, 76, 76)
Frame_5.BorderSizePixel = 0
Frame_5.LayoutOrder = 1
Frame_5.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame_5.Size = UDim2.new(1, 0, 1, 0)

TextButton_2.Parent = Frame
TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.BackgroundTransparency = 1.000
TextButton_2.Position = UDim2.new(0.600000024, 0, 0.200000003, 0)
TextButton_2.Size = UDim2.new(0.400000006, 0, 0.200000003, 0)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = "Sphere"
TextButton_2.TextColor3 = Color3.fromRGB(255, 76, 76)
TextButton_2.TextScaled = true
TextButton_2.TextSize = 14.000
TextButton_2.TextWrapped = true

repeat wait() until game.Players.LocalPlayer
ScreenGui.Parent = game:GetService("CoreGui")



Frame_4.InputBegan:connect(function(inp)
	if inp.UserInputType == Enum.UserInputType.MouseButton1 then
		dmgEnabled = not dmgEnabled
		local goal = {Size = UDim2.new(0,0,0,0)}
		if dmgEnabled then
			goal = {Size = UDim2.new(1,0,1,0)}
		end
		game:GetService("TweenService"):Create(Frame_5,TweenInfo.new(0.12,Enum.EasingStyle.Quad),goal):Play()
	end
end)
Frame_2.InputBegan:connect(function(inp)
	if inp.UserInputType == Enum.UserInputType.MouseButton1 then
		visualizerEnabled = not visualizerEnabled
		local goal = {Size = UDim2.new(0,0,0,0)}
		if visualizerEnabled then
			goal = {Size = UDim2.new(1,0,1,0)}
		end
		game:GetService("TweenService"):Create(Frame_3,TweenInfo.new(0.12,Enum.EasingStyle.Linear),goal):Play()
	end
end)
TextButton_2.MouseButton1Click:connect(function()
	if reachType == "Sphere" then
		reachType = "Line"
	else
		reachType = "Sphere"
	end
	TextButton_2.Text = reachType
end)
TextButton.MouseButton1Click:connect(function()
	trueActive = false
	ScreenGui:Destroy()
end)
game:GetService("UserInputService").InputBegan:connect(function(inp,gpe)
	if gpe then return end
	if inp.KeyCode == Enum.KeyCode.H then
		ScreenGui.Enabled = not ScreenGui.Enabled
	end
end)

local plr = game.Players.LocalPlayer

local function onHit(hit,handle)
    local victim = hit.Parent:FindFirstChildOfClass("Humanoid")
	    if victim and victim.Parent.Name ~= game.Players.LocalPlayer.Name then
		if dmgEnabled then
	        for _,v in pairs(hit.Parent:GetChildren()) do
	            if v:IsA("Part") then
	                firetouchinterest(v,handle,0)
	                firetouchinterest(v,handle,1)
	            end
			end
		else
			firetouchinterest(hit,handle,0)
			firetouchinterest(hit,handle,1)
		end
    end
end

local function getWhiteList()
    local wl = {}
    for _,v in pairs(game.Players:GetPlayers()) do
        if v ~= plr then
            local char = v.Character
            if char then
                for _,q in pairs(char:GetChildren()) do
                    if q:IsA("Part") then
                        table.insert(wl,q)
                    end
                end
            end
        end
    end
    return wl
end

game:GetService("RunService").RenderStepped:connect(function()
    if not active or not trueActive then return end
	local s = plr.Character and plr.Character:FindFirstChildOfClass("Tool")
	if not s then visualizer.Parent = nil end
    if s then
        local handle = s:FindFirstChild("Handle") or s:FindFirstChildOfClass("Part")
		if handle then
			if visualizerEnabled then
				visualizer.Parent = workspace
			else
				visualizer.Parent = nil
			end
			local reach = tonumber(TextBox.Text)
			if reach then
				if reachType == "Sphere" then
					visualizer.Shape = Enum.PartType.Ball
					visualizer.Size = Vector3.new(reach,reach,reach)
					visualizer.CFrame = handle.CFrame
		            for _,v in pairs(game.Players:GetPlayers()) do
		                local hrp = v.Character and v.Character:FindFirstChild("HumanoidRootPart")
		                if hrp and handle then
		                    local mag = (hrp.Position-handle.Position).magnitude
		                    if mag <= reach then
		                        onHit(hrp,handle)
		                    end
		                end
					end
				elseif reachType == "Line" then
					local origin = (handle.CFrame*CFrame.new(0,0,-2)).p
		    		local ray = Ray.new(origin,handle.CFrame.lookVector*-reach)
					local p,pos = workspace:FindPartOnRayWithWhitelist(ray,getWhiteList())
					visualizer.Shape = Enum.PartType.Block
					visualizer.Size = Vector3.new(1,0.8,reach)
					visualizer.CFrame = handle.CFrame*CFrame.new(0,0,(reach/2)+2)
		    		if p then
		    		    onHit(p,handle)
		    		else
		    		    for _,v in pairs(handle:GetTouchingParts()) do
		    		        onHit(v,handle)
		    		    end
		    		end
				end
			end
        end
    end
end)

elseif not Value then

 active = false
 trueActive = false
 reachType = "Sphere"
 dmgEnabled = true
 visualizerEnabled = true


end
   end,
})

local Tab = Window:CreateTab("auto buy/auto equip", 0) -- Title, Image

local Section = Tab:CreateSection("armor")

local Button = Tab:CreateButton({
   Name = "wood armor [20 wins]",
   Callback = function()
   game.workspace.Purchases.SPurchases.Armors["[Wood Armor]\010[20 Wins]"].Button.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

wait(0.1)

game.workspace.Purchases.SPurchases.Armors["[Wood Armor]\010[20 Wins]"].Button.CFrame = game.workspace.Purchases.SPurchases.Armors["[Wood Armor]\010[20 Wins]"].Chest.Part.CFrame
   end,
})

local Button = Tab:CreateButton({
   Name = "gold armor [80 wins]",
   Callback = function()
  game.workspace.Purchases.SPurchases.Armors["[Gold Armor]\010[80 Wins]"].Button.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

wait(0.1)

game.workspace.Purchases.SPurchases.Armors["[Gold Armor]\010[80 Wins]"].Button.CFrame = game.workspace.Purchases.SPurchases.Armors["[Gold Armor]\010[80 Wins]"].Chest.Part.CFrame

   end,
})

local Button = Tab:CreateButton({
   Name = "iron armor [120 wins]",
   Callback = function()
  game.workspace.Purchases.SPurchases.Armors["[Iron Armor]\010[120 Wins]"].Button.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
wait(0.1)
game.workspace.Purchases.SPurchases.Armors["[Iron Armor]\010[120 Wins]"].Button.CFrame = game.workspace.Purchases.SPurchases.Armors["[Iron Armor]\010[120 Wins]"].Chest.Part.CFrame

   end,
})

local Button = Tab:CreateButton({
   Name = "diamond armor [200 wins]",
   Callback = function()
  game.workspace.Purchases.SPurchases.Armors["[Diamond Armor]\010[200 Wins]"].Button.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

wait(0.1)

game.workspace.Purchases.SPurchases.Armors["[Diamond Armor]\010[200 Wins]"].Button.CFrame = game.workspace.Purchases.SPurchases.Armors["[Diamond Armor]\010[200 Wins]"].Chest.Part.CFrame

   end,
})

local Button = Tab:CreateButton({
   Name = "Group armor [12 Wins]",
   Callback = function()
  game.workspace.Purchases:GetChildren()[4]["[Group Armor]\010[12 Wins]"].Button.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

wait(0.1)

game.workspace.Purchases:GetChildren()[4]["[Group Armor]\010[12 Wins]"].Button.CFrame = game.workspace.Purchases:GetChildren()[4]["[Group Armor]\010[12 Wins]"].Chest.Part.CFrame

   end,
})

local Section = Tab:CreateSection("helmets")

local Button = Tab:CreateButton({
   Name = "diamond Helmet [FREE]",
   Callback = function()
   
game.workspace.Purchases.MVPurchases.Helmets["[ Diamond Helmet ]\010[1000 Wins]"].SWHelmet.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

wait(0.1)

game.workspace.Purchases.MVPurchases.Helmets["[ Diamond Helmet ]\010[1000 Wins]"].SWHelmet.CFrame = game.workspace.Purchases.MVPurchases.Helmets["[ Diamond Helmet ]\010[1000 Wins]"].Head.CFrame

   end,
})

local Button = Tab:CreateButton({
   Name = "ruby Helmet [2 wins]",
   Callback = function()
   
game.workspace.Purchases.MVPurchases.Helmets["[Ruby Helmet]\010[2 Wins]"].SWHelmet.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

wait(0.1)

game.workspace.Purchases.MVPurchases.Helmets["[Ruby Helmet]\010[2 Wins]"].SWHelmet.CFrame = game.workspace.Purchases.MVPurchases.Helmets["[Ruby Helmet]\010[2 Wins]"].Head.CFrame


   end,
})

local Button = Tab:CreateButton({
   Name = "Emerald Helmet [4 wins]",
   Callback = function()
   
game.workspace.Purchases.MVPurchases.Helmets["[Emerald Helmet]\010[4 Wins]"].SWHelmet.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

wait(0.1)

game.workspace.Purchases.MVPurchases.Helmets["[Emerald Helmet]\010[4 Wins]"].SWHelmet.CFrame = game.workspace.Purchases.MVPurchases.Helmets["[Emerald Helmet]\010[4 Wins]"].Head.CFrame

   end,
})

local Button = Tab:CreateButton({
   Name = "Obsidian Helmet [6 Wins]",
   Callback = function()
   
game.workspace.Purchases.MVPurchases.Helmets["[Obsidian Helmet]\010[6 Wins]"].SWHelmet.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

wait(0.1)

game.workspace.Purchases.MVPurchases.Helmets["[Obsidian Helmet]\010[6 Wins]"].SWHelmet.CFrame = game.workspace.Purchases.MVPurchases.Helmets["[Obsidian Helmet]\010[6 Wins]"].Head.CFrame

   end,
})



local Section = Tab:CreateSection("pots [soon]")



local Section = Tab:CreateSection("tools [soon]")























 Rayfield:LoadConfiguration()














